[project]
name = "baseobject"
version = "0.0.1"
description = "Base classes for sklearn-like parametric objects"
authors = [
    {name = "Franz Kiraly", email = "f.kiraly@ucl.ac.uk"},
    {name = "Markus LÃ¶ning"},
    {name = "Ryan Kuhns"},
]
maintainers = [
    {name = "Franz Kiraly", email = "f.kiraly@ucl.ac.uk"},
    {name = "Ryan Kuhns"},
]
readme = "README.md"
keywords = [
    "data-science",
    "machine-learning",
    "scikit-learn",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]
requires-python = ">=3.7,<3.11"
dependencies = [
    "scikit-learn>=0.24.0,<1.2.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "mypy",
    "pytest",
    "pytest-cov",
    "coverage",
    "isort",
    "flake8",
    "black",
    "pydocstyle",
    "nbqa",
    "flake8-bugbear",
    "flake8-builtins",
    "flake8-quotes",
    "flake8-comprehensions",
    "pandas-vet",
    "flake8-print",
    "pep8-naming",
    "doc8",
]

binder = ["jupyter"]

docs = [
    "jupyter",
    "nbsphinx>=0.8.6",
    "numpydoc",
    "pydata-sphinx-theme",
    "sphinx_issues",
    "sphinx-gallery",
    "sphinx-panels",
    "sphinx",
]

tests = [
    "pytest",
    "coverage",
    "pytest-cov",
    "safety",
]

[project.urls]
homepage = "https://github.com/fkiraly/baseobject"
repository = "https://github.com/fkiraly/baseobject"
documentation = "https://github.com/fkiraly/baseobject"
download = "https://pypi.org/project/baseobject/#files"

[project.license]
file = "LICENSE"

[build-system]
requires = ["setuptools", "wheel", "toml", "build"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
# ignore certain folders
addopts = [
    "--doctest-modules"
]

[tool.isort]
profile = "black"
src_paths = ["isort", "test"]
multi_line_output = 3

[tool.black]
line-length = 88
extend-exclude = ["^/setup.py", "docs/conf.py"]

[tool.pydocstyle]
convention = "numpy"

[tool.coverage.report]
show_missing = true

[tool.coverage.run]
source = ["baseobject"]
omit = ["*/setup.py", "tests/*"]

[tool.doc8]
max-line-length=88

[tool.bandit]
exclude_dirs = ["*/tests/*"]
